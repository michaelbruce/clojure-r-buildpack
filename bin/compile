#!/usr/bin/env bash

set -e

BUILD_DIR=$1
CACHE_DIR="$2/vendor"
VENDOR_DIR="$BUILD_DIR/vendor"
LP_DIR=`cd $(dirname $0); cd ..; pwd`
BUILDPACK_DIR="$(dirname $(dirname $0))"
[ -z "${STACK}" ] && STACK="cedar-14"
[ -z "${CRAN_MIRROR}" ] && CRAN_MIRROR="http://cloud.r-project.org"

echo $BUILD_DIR
echo $CACHE_DIR

mkdir -p $CACHE_DIR
mkdir -p $VENDOR_DIR

# Building wkhtmltopdf

TMP_PATH="$BUILD_DIR/tmp"
BIN_PATH="$BUILD_DIR/bin"

mkdir -p $BIN_PATH $TMP_PATH

[ -z "$WKHTMLTOPDF_VERSION" ] && WKHTMLTOPDF_VERSION="0.12.4"
WKHTMLTOPDF_URL="https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/${WKHTMLTOPDF_VERSION}/wkhtmltox-${WKHTMLTOPDF_VERSION}_linux-generic-amd64.tar.xz"
WKHTMLTOPDF_TAR="$CACHE_DIR/wkhtmltox.tar.xz"
WKHTMLTOPDF_PATH="$TMP_PATH/wkhtmltox"
WKHTMLTOPDF_BINARIES="$WKHTMLTOPDF_PATH/bin"

if [ -f $WKHTMLTOPDF_TAR ]; then
  echo "-----> Using wkhtmltopdf tar from cache"
else
  echo "-----> Downloading wkhtmltopdf tar"
  curl -L $WKHTMLTOPDF_URL -o $WKHTMLTOPDF_TAR
fi

echo "-----> Unpacking tar"
tar -xf $WKHTMLTOPDF_TAR -C $TMP_PATH

echo "-----> Moving binaries to the right place"
mkdir -p $VENDOR_DIR/wkhtmltopdf
mv $WKHTMLTOPDF_BINARIES/* $VENDOR_DIR/wkhtmltopdf
chmod +x $VENDOR_DIR/wkhtmltopdf

# Building ghostscript

echo "-----> Installing Ghostscript 9.20 using build directory $1"

PACKAGE="https://github.com/ArtifexSoftware/ghostpdl-downloads/releases/download/gs921/ghostscript-9.21-linux-x86_64.tgz"
BINARY="ghostscript-9.21-linux-x86_64/gs-921-linux-x86_64"
LOCATION="$BUILD_DIR/vendor/gs"

cd $BUILD_DIR
mkdir -p $LOCATION/bin
wget -O gs.tgz $PACKAGE # Couldn't get curl to work for some reason
tar xvf gs.tgz
mv $BINARY $LOCATION/bin/gs

echo "-----> Building runtime environment for Ghostscript to $LOCATION"

mkdir -p $BUILD_DIR/.profile.d
echo "export PATH=\"\$HOME/vendor/gs/bin:\$PATH\"" > $BUILD_DIR/.profile.d/ghostscript.sh

# Building R binary

S3_BUCKET="heroku-buildpack-r"
BUILD_PACK_VERSION="latest"
R_VERSION="3.4.3"
R_BINARIES="http://${S3_BUCKET}.s3.amazonaws.com/${STACK}/R-${R_VERSION}-binaries-${BUILD_PACK_VERSION}.tar.gz"

# vendor R into the slug
echo "Vendoring R $R_VERSION for $STACK stack ($BUILD_PACK_VERSION)"
echo "Downloading and unpacking R binaries ($R_BINARIES)"
curl $R_BINARIES -s -o - | tar xzf - -C $BUILD_DIR

mkdir -p /app/.apt
cp -R $VENDOR_DIR/.apt/* /app/.apt

mkdir -p /app/vendor/R
cp -R $VENDOR_DIR/R/* /app/vendor/R

export PATH="/app/vendor/R/bin:$VENDOR_DIR/wkhtmltopdf:/app/.apt/usr/bin:$PATH"
export R_INCLUDE="/app/vendor/R/lib64/R/include"
export LD_LIBRARY_PATH="/app/.apt/usr/lib/libblas:/app/.apt/usr/lib/lapack:/app/.apt/usr/lib/x86_64-linux-gnu:/app/.apt/usr/lib/i386-linux-gnu:/app/.apt/usr/lib:$LD_LIBRARY_PATH"
export LIBRARY_PATH="/app/.apt/usr/lib/x86_64-linux-gnu:/app/.apt/usr/lib/i386-linux-gnu:/app/.apt/usr/lib:$LIBRARY_PATH"
export INCLUDE_PATH="/app/.apt/usr/include:$INCLUDE_PATH"
export CPATH="$INCLUDE_PATH"
export CPPPATH="$INCLUDE_PATH"
export PKG_CONFIG_PATH="/app/.apt/usr/lib/x86_64-linux-gnu/pkgconfig:/app/.apt/usr/lib/i386-linux-gnu/pkgconfig:/app/.apt/usr/lib/pkgconfig:$PKG_CONFIG_PATH"
export LDFLAGS="-L/app/.apt/usr/lib/libblas -L/app/.apt/usr/lib/lapack $LDFLAGS"

# copy over environment
mkdir -p $BUILD_DIR/.profile.d
cp "$BUILDPACK_DIR/bin/r_environment.sh" $BUILD_DIR/.profile.d/r_environment.sh

# Rserve is not accessible at runtime with this one line by itself
# R --no-save -e "install.packages('Rserve', repos='http://cran.us.r-project.org')"

# Building Java binary

BIN_DIR=$(cd $(dirname $0); pwd) # absolute path
. $BIN_DIR/java
. $BIN_DIR/util

# Install JDK
install_java_with_overlay ${BUILD_DIR}

java -version

echo "JAVA_OPTS: $JAVA_OPTS"

# Printing diagnostic information

export PATH="$BUILD_DIR:$CACHE_DIR:$PATH"

echo $PATH
